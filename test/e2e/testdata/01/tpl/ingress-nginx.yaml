# Deployment and RBAC RoleBindings for ingress-nginx
# See https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/mandatory.yaml
#     https://kubernetes.github.io/ingress-nginx/user-guide
#     https://github.com/kubernetes/ingress-nginx/tree/master/deploy
#
# Parameters:
#  ingress:
#    class: in(ternal) or ex(ternal)    # ingress instance.
#    replicaCount:                      # number of ingress instances (2 for prod)
#  podSecurityPolicy:                   # boolean
#  k8sCluster:                          # cluster name
#
# Computed variables: 
#   This nginx-ingress handles nginx.ingress.kubernetes.io/ingress.class: {{ $class := .Values.ingress.class -}} {{ $class }}
#

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-configuration-{{ $class }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: ingress-nginx-{{ $class }}
    app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
    mmlt.nl/gitops: {{ .Values.gitops }}
data:
  enable-vts-status: "true"
  use-geoip: "false"
  use-geoip2: "true"
  server-tokens: "false"
  proxy-buffer-size: "16k"
  # nginx log level
  error-log-level: error

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: tcp-services-{{ $class }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: ingress-nginx-{{ $class }}
    app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
    mmlt.nl/gitops: {{ .Values.gitops }}

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: udp-services-{{ $class }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: ingress-nginx-{{ $class }}
    app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
    mmlt.nl/gitops: {{ .Values.gitops }}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-ingress-serviceaccount-{{ $class }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: ingress-nginx-{{ $class }}
    app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
    mmlt.nl/gitops: {{ .Values.gitops }}

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: nginx-ingress-role-{{ $class }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: ingress-nginx-{{ $class }}
    app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
    mmlt.nl/gitops: {{ .Values.gitops }}
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<ingress-controller-leader>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - ingress-controller-leader-{{ $class }}
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
{{- if .Values.podSecurityPolicy }}
  - apiGroups:      [extensions]
    resources:      [podsecuritypolicies]
    verbs:          [use]
    resourceNames:  [nginx-ingress]
{{- end }}

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: nginx-ingress-role-nisa-binding-{{ $class }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: ingress-nginx-{{ $class }}
    app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
    mmlt.nl/gitops: {{ .Values.gitops }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-ingress-role-{{ $class }}
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount-{{ $class }}
    namespace: {{ .Values.namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress-clusterrole-nisa-binding-{{ $class }}
  labels:
    app.kubernetes.io/name: ingress-nginx-{{ $class }}
    app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
    mmlt.nl/gitops: {{ .Values.gitops }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-clusterrole
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount-{{ $class }}
    namespace: {{ .Values.namespace }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller-{{ $class }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: ingress-nginx-{{ $class }}
    app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
    mmlt.nl/gitops: {{ .Values.gitops }}
spec:
  replicas: {{ .Values.ingress.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx-{{ $class }}
      app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx-{{ $class }}
        app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: nginx-ingress-serviceaccount-{{ $class }}
      securityContext:
        fsGroup: 1001
        runAsUser: 1001      
      containers:
      - name: nginx-ingress-controller
        image: bitnami/nginx-ingress-controller:0.24.1 # quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.24.1
        args:
        - /nginx-ingress-controller
        - --default-backend-service=$(POD_NAMESPACE)/default-http-backend-{{ $class }}
        - --configmap=$(POD_NAMESPACE)/nginx-configuration-{{ $class }}
        - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services-{{ $class }}
        - --udp-services-configmap=$(POD_NAMESPACE)/udp-services-{{ $class }}
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-{{ $class }}
        - --annotations-prefix=nginx.ingress.kubernetes.io
        - --election-id=ingress-controller-leader
        - --ingress-class={{ $class }}
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: stats
          containerPort: 18080
        - name: metrics
          containerPort: 10254
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          requests:
            cpu: 500m
            memory: 200Mi
          limits:
            cpu: 1
            memory: 200Mi
---
kind: Service
apiVersion: v1
metadata:
  name: ingress-nginx-{{ $class }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: ingress-nginx-{{ $class }}
    app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
    mmlt.nl/gitops: {{ .Values.gitops }}
{{- if eq $class "in" }} 
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"    
    service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "intlb"
{{- end }}
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: ingress-nginx-{{ $class }}
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default-http-backend-serviceaccount-{{ $class }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: default-http-backend-{{ $class }}
    app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
    mmlt.nl/gitops: {{ .Values.gitops }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-http-backend-serviceaccount-{{ $class }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: default-http-backend-{{ $class }}
    app.kubernetes.io/part-of: ingress-nginx-{{ $class }}  
    mmlt.nl/gitops: {{ .Values.gitops }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: binck-restricted-psp
subjects:
- kind: ServiceAccount
  name: default-http-backend-serviceaccount-{{ $class }}
  namespace: {{ .Values.namespace }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: default-http-backend-{{ $class }}
  labels:
    app.kubernetes.io/name: default-http-backend-{{ $class }}
    app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
    mmlt.nl/gitops: {{ .Values.gitops }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: default-http-backend-{{ $class }}
      app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: default-http-backend-{{ $class }}
        app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
    spec:
      serviceAccountName: default-http-backend-serviceaccount-{{ $class }}
      terminationGracePeriodSeconds: 60
      containers:
        - name: default-http-backend
          # Any image is permissible as long as:
          # 1. It serves a 404 page at /
          # 2. It serves 200 on a /healthz endpoint
          image: nginxinc/nginx-unprivileged:stable #image: k8s.gcr.io/defaultbackend-amd64:1.5
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            runAsUser: 101

---
apiVersion: v1
kind: Service
metadata:
  name: default-http-backend-{{ $class }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: default-http-backend-{{ $class }}
    app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
    mmlt.nl/gitops: {{ .Values.gitops }}
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: default-http-backend-{{ $class }}
    app.kubernetes.io/part-of: ingress-nginx-{{ $class }}
